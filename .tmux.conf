# prefixキーをC-zに変更する
set-option -g prefix C-z

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-z*2でtmux内のプログラムにC-aを送る
# bind C-z send-prefix

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# shell
set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 60
set-option -g status-left "#[fg=white,bg=black]#H#[fg=white]:#[fg=white][#P]"
## 右パネルを設定する
set -g status-right-length 120
set-option -g status-right "#[fg=green][%Y-%m-%d(%a) %H:%M]"
## ステータスバーのUTF-8サポートを有効にする
# setw -g utf8 on
# set -g status-utf8 on
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# コピーモードを設定する
## viのキーバインドを使用する
set-window-option -g mode-keys vi
# Prefix+v でコピーモード開始
bind-key -T copy-mode-vi v send-keys -X begin-selection

bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-a send-keys -X start-of-line
bind-key -T copy-mode-vi C-e send-keys -X end-of-line
bind-key -T copy-mode-vi w send-keys -X next-word
bind-key -T copy-mode-vi e send-keys -X next-word-end
bind-key -T copy-mode-vi b send-keys -X previous-word
bind-key -T copy-mode-vi g send-keys -X top-line
bind-key -T copy-mode-vi G send-keys -X bottom-line
bind-key -T copy-mode-vi / send-keys -X search-forward
bind-key -T copy-mode-vi ? send-keys -X search-backward
bind-key -T copy-mode-vi C-n send-keys -X page-up
bind-key -T copy-mode-vi C-f send-keys -X page-down
bind-key -T copy-mode-vi C-u send-keys -X scroll-up
bind-key -T copy-mode-vi C-d send-keys -X scroll-down

## コピーモードの操作をvi風に設定する
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
bind-key -T copy-mode-vi y     send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

bind-key -T copy-mode C-w send -X copy-pipe-and-cancel 'pbcopy'
bind-key -T copy-mode C-u send -X page-up
bind-key -T copy-mode C-d send -X page-down

# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# 
# if-shell 'test "$(uname -s)" = Darwin' "set-option -g default-command 'reattach-to-user-namespace -l ${SHELL}'"

set -g history-limit 10000
